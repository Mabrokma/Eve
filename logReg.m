%Perform logistic regression a la DePace

%Gap is a structure that contains the profiles of the gap genes over time, 
%with some given temporal resolution
%miniCP is a mini Compiled Particles structure generated by cpStreamline()
%startTime and endTime specify the time in minutes of nc14 at which the
%model will be trained.  ideally endTime - startTime = Gap.timeStep

function [coeffs, activeNucleiModel] = ...
    logReg(Gap, miniCP, startTime, endTime)


%TODO - separate by stripe enhancers

if ~isfield(Gap, 'avgExp')
    error('Run gapGeneTimeTrace() first')
end

%Gap gene protein data:
gapFrame = find(Gap.timeStep:Gap.timeStep:60 < startTime,1,'last');
xTraining = squeeze(Gap.avgExp(gapFrame,:,:));

%Extract indices in training data set corresponding to times
time = miniCP.ElapsedTime-miniCP.ElapsedTime(miniCP.nc14);
trainingRange = find(time > startTime, 1):find(logical(...
    (time < endTime).* (time < startTime + gapFrame(1))), 1, 'last');

%Tile to match size of y input
xTraining = repmat(xTraining,length(trainingRange),1);

%Eve expression data: 
%needs to be in logical form
nP = miniCP.activeNuclei(trainingRange,:,3)';
nP = nP(:);
nN = miniCP.totalNuclei(trainingRange,:,1)';
nN = nN(:);

yTraining = [nP,nN];

%Filter out zero points
filter = logical((yTraining(:,2) ~= 0).*(yTraining(:,1)<=yTraining(:,2)));

coeffs = glmfit(xTraining(filter,:), yTraining(filter,:), 'Binomial');


%Now plot timetrace of eve using fit
%Create the timetrace
dims = size(Gap.avgExp);
activeNucleiModel = zeros(dims(1:2));

for t = 1:dims(1)
    activeNucleiModel(t,:) = 1 ./ (1 + exp(-1*(coeffs(1) + ...
        coeffs(2) * Gap.avgExp(t,:,1) + ...
        coeffs(3) * Gap.avgExp(t,:,2) + ...
        coeffs(4) * Gap.avgExp(t,:,3) + ...
        coeffs(5) * Gap.avgExp(t,:,4))));
end

%plot heatmaps of relevant inputs, reference time-trace, and model
activeNucleiModel(:,[1:miniCP.minAP+1, miniCP.maxAP-1:end]) = NaN;
miniCP.activeNuclei(:,[1:miniCP.minAP+1, miniCP.maxAP-1:end],:) = NaN;

modelRange = miniCP.nc14:find(time > 60,1);

%KLUGE for activeNuclei > 1 problem
miniCP.activeNuclei(miniCP.activeNuclei(:,:,1) > 1) = 1;

%Plot gap gene protein concentrations
figure(1);
for i = 1:4
subplot(2,4,i);
imagesc([0,1],[0,60], Gap.avgExp(:,:,i));
title([Gap.Name{i}, ': Expression Pattern'])
xlabel('AP Position (%EL)')
ylabel('Time into nc14 (min)')
colormap jet;
end

%Plot model
subplot(2,4,5:6)
imagesc([0,1],[0,60], activeNucleiModel,[0,1])
title('Modeled Eve Expression (% Active Nuclei)')
xlabel('AP Position (%EL)')
ylabel('Time into nc14 (min)')
colorbar

%Plot seed plot
subplot(2,4,7:8)
imagesc([0,1],[0,60], miniCP.activeNuclei(modelRange,:,1),[0,1])
title('Observed Eve Expression (% Active Nuclei)')
xlabel('AP Position (%EL)')
ylabel('Time into nc14 (min)')
colorbar

